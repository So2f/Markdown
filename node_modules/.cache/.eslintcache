[{"/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/index.js":"1","/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/reportWebVitals.js":"2","/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/App.js":"3","/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/sampleText.js":"4"},{"size":582,"mtime":1682589146763,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1682588500723,"results":"7","hashOfConfig":"6"},{"size":1331,"mtime":1694304091533,"results":"8","hashOfConfig":"6"},{"size":560,"mtime":1682588993203,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xu0x0p",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/index.js",[],[],"/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/reportWebVitals.js",[],[],"/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/App.js",["23","24"],[],"import { Component, useState } from \"react\";\nimport \"./App.css\";\nimport { sampleText } from \"./sampleText\";\nimport { marked } from \"marked\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const original_text = localStorage.getItem(\"text\");\n\n  const [text, setText] = useState(original_text);\n\n  useEffect(() => {\n    if (original_text) {\n      setText(original_text);\n    } else {\n      //if text is empty, it resets the original_text to the sample one\n      setText(sampleText);\n    }\n  }, []);\n\n  useEffect(() => {\n    //console.log(\"Je suis mis a jour.\");\n    localStorage.setItem(\"text\", text);\n    console.log(text);\n  }, [text]);\n\n  function handleChange(event) {\n    const text = event.target.value;\n    setText(text); //update du text en fonction de l'event\n  }\n\n  function renderText(text) {\n    const __html = marked(text, { sanitize: true });\n    return { __html };\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <textarea\n            onChange={handleChange}\n            rows=\"35\"\n            className=\"form-control\"\n            value={text}\n          />\n        </div>\n        <div className=\"col-sm-6\">\n          <div dangerouslySetInnerHTML={renderText(text)}></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/so2f/Udemy/React_Course/Projet_1/Markdown/src/sampleText.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":1,"column":10,"nodeType":"27","messageId":"28","endLine":1,"endColumn":19},{"ruleId":"29","severity":1,"message":"30","line":19,"column":6,"nodeType":"31","endLine":19,"endColumn":8,"suggestions":"32"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'original_text'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [original_text]",{"range":"36","text":"37"},[499,501],"[original_text]"]